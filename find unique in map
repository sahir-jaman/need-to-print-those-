// find unique in map

this is the first process where u did it through input values  and below down there is another process where u did it without input
values ;  :)

// the map::count() function 
#include <bits/stdc++.h> 
using namespace std; 

int main() 
{ 

	// initialize container 
	map<int, int> mp; 

	// insert elements in random order 
	mp.insert({ 2, 30 }); 
	mp.insert({ 1, 40 }); 
	mp.insert({ 3, 60 }); 
	mp.insert({ 4, 20 }); 
	mp.insert({ 5, 50 }); 

	// checks if key 1 is present or not 
	if (mp.count(1)) 
		cout << "The key 1 is present\n"; 
	else
		cout << "The key 1 is not present\n"; 

	// checks if key 100 is present or not 
	if (mp.count(100)) 
		cout << "The key 100 is present\n"; 
	else
		cout << "The key 100 is not present\n"; 

	return 0; 
} 

// second process without input values ;

#include<bits/stdc++.h>
using namespace std;
int main()
{
    map<string,int>m;
    map<string,int>:: iterator it;
    int n;
    while(n--)
    {
        int n;
        cin >> n;

        map<string, int> database;
        string s;
        while (n--)
        {
            cin >> s;
            if (database.count(s) == 0)
            {
                cout << "OK" << endl;
                database[s] = 1;
            }
            else
            {
                cout << s << database[s] << endl;
                database[s] += 1;
            }
        }
        return 0;

    }

}


